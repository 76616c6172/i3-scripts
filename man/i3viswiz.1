.nh
.TH I3VISWIZ 1 2021-09-01 Linux "User Manuals"
.SH NAME
.PP
\fB\fCi3viswiz\fR - Professional window focus for i3wm

.SH SYNOPSIS
.PP
.RS

.nf
i3viswiz [--gap|-g GAPSIZE] DIRECTION 
i3viswiz --title|-t       [--gap|-g GAPSIZE] [DIRECTION|TARGET] [--focus|-f] 
i3viswiz --instance|-i    [--gap|-g GAPSIZE] [DIRECTION|TARGET] [--focus|-f]
i3viswiz --class|-c       [--gap|-g GAPSIZE] [DIRECTION|TARGET] [--focus|-f]
i3viswiz --titleformat|-o [--gap|-g GAPSIZE] [DIRECTION|TARGET] [--focus|-f]
i3viswiz --winid|-d       [--gap|-g GAPSIZE] [DIRECTION|TARGET] [--focus|-f]
i3viswiz --parent|-p      [--gap|-g GAPSIZE] [DIRECTION|TARGET] [--focus|-f]
i3viswiz [--json JSON] [--debug VARLIST] [--debug-format FORMAT] [--verbose]
i3viswiz --help|-h
i3viswiz --version|-v

.fi
.RE

.SH DESCRIPTION
.PP
\fB\fCi3viswiz\fR either prints a list of the currently
visible tiled windows to \fB\fCstdout\fR or shifts the
focus depending on the arguments.

.PP
If a \fIDIRECTION\fP (left|right|up|down) is passed,
\fB\fCi3wizvis\fR will shift the focus to the window
closest in the given \fIDIRECTION\fP, or warp focus if
there are no windows in the given direction.

.SH OPTIONS
.PP
\fB\fC--gap\fR|\fB\fC-g\fR TARGET
.br
Set GAPSIZE (defaults to 5). GAPSIZE is the
distance in pixels from the current window where
new focus will be searched.

.PP
\fB\fC--title\fR|\fB\fC-t\fR
.br
If \fBTARGET\fP matches the \fBTITLE\fP of a visible
window, that windows  \fBCON_ID\fP will get printed
to \fB\fCstdout\fR\&. If no \fBTARGET\fP is specified, a list
of all tiled windows will get printed with
\fBTITLE\fP as the last field of each row.

.PP
\fB\fC--focus\fR|\fB\fC-f\fR
.br
When used in conjunction with: \fB\fC--titleformat\fR,
\fB\fC--title\fR, \fB\fC--class\fR, \fB\fC--instance\fR, \fB\fC--winid\fR or
\fB\fC--parent\fR\&. The \fBCON_ID\fP of \fBTARGET\fP window
will get focused if it is visible.

.PP
\fB\fC--instance\fR|\fB\fC-i\fR
.br
If \fBTARGET\fP matches the \fBINSTANCE\fP of a
visible window, that windows  \fBCON_ID\fP will get
printed to \fB\fCstdout\fR\&. If no \fBTARGET\fP is
specified, a list of all tiled windows will get
printed with  \fBINSTANCE\fP as the last field of
each row.

.PP
\fB\fC--class\fR|\fB\fC-c\fR
.br
If \fBTARGET\fP matches the \fBCLASS\fP of a visible
window, that windows  \fBCON_ID\fP will get printed
to \fB\fCstdout\fR\&. If no \fBTARGET\fP is specified, a list
of all tiled windows will get printed with
\fBCLASS\fP as the last field of each row.

.PP
\fB\fC--titleformat\fR|\fB\fC-o\fR
.br
If \fBTARGET\fP matches the \fBTITLE_FORMAT\fP of a
visible window, that windows  \fBCON_ID\fP will get
printed to \fB\fCstdout\fR\&. If no \fBTARGET\fP is
specified, a list of all tiled windows will get
printed with  \fBTITLE_FORMAT\fP as the last field
of each row.

.PP
\fB\fC--winid\fR|\fB\fC-d\fR
.br
If \fBTARGET\fP matches the \fBWIN_ID\fP of a visible
window, that windows  \fBCON_ID\fP will get printed
to \fB\fCstdout\fR\&. If no \fBTARGET\fP is specified, a list
of all tiled windows will get printed with
\fBWIN_ID\fP as the last field of each row.

.PP
\fB\fC--parent\fR|\fB\fC-p\fR
.br
If \fBTARGET\fP matches the \fBPARENT\fP of a visible
window, that windows  \fBCON_ID\fP will get printed
to \fB\fCstdout\fR\&. If no \fBTARGET\fP is specified, a list
of all tiled windows will get printed with
\fBPARENT\fP as the last field of each row.

.PP
\fB\fC--json\fR JSON
.br
use JSON instead of output from  \fB\fCi3-msg -t
get_tree\fR

.PP
\fB\fC--debug\fR VARLIST
.br
VARLIST is used to determine what to output. By
default the value of VARLIST is: \fB\fCLIST\fR .
Available units are:

.PP
.RS

.nf
wall         | none|(up|left|down|right-)(workspace|area)
trgcon       | container id of the window to be focused
trgpar       | name of i3fyra container target container is located in
gap          | internal gap value used
sw           | active workspace width
sh           | active workspace height
sx           | active workspace x position
sy           | active workspace y position
aw           | active window width
ah           | active window height
ax           | active window x position
ay           | active window y position
trgx         | target windows x position
trgy         | target windows y position
grouplayout  | active windows parent container layout (tabbed|splitv|splith|stacked)
groupid      | active windows parent container ID
grouppos     | active windows position relative to its sibling containers
groupsize    | number of child containers in active windows parent container
firstingroup | container ID of the first child in active windows parent container
lastingroup  | container ID of the last child in active windows parent container
LIST         | prints a table with all visible windows
ALL          | all the above combined

.fi
.RE

.PP
Multiple units can be used if comma separated.

.PP
Example:

.PP
.RS

.nf
$ i3viswiz --instance u --debug gap,wall,grouppos
gap=5 wall=up-area grouppos=1 

.fi
.RE

.PP
\fB\fC--debug-format\fR FORMAT
.br
The default value of FORMAT is "%k=%v ".  \fB\fC%k\fR is
translated to the key/unit name, and \fB\fC%v\fR to the
value.

.PP
Example:

.PP
.RS

.nf
$ i3viswiz --instance u --debug gap,wall,grouppos --debug-format "%v\\n"
5
up-area
1 

.fi
.RE

.PP
\fB\fC--verbose\fR
.br
If set, more stuff gets printed to \fBSTDERR\fP
during the execution of the script.

.PP
Example:

.PP
.RS

.nf
$ i3viswiz --instance u --debug gap --verbose 

---i3viswiz start---
gap=5 
f cleanup()
---i3viswiz done: 14ms---

.fi
.RE

.PP
\fB\fC--help\fR|\fB\fC-h\fR
.br
Show help and exit.

.PP
\fB\fC--version\fR|\fB\fC-v\fR
.br
Show version and exit.

.SH EXAMPLES
.PP
replace the normal i3 focus keybindings with
viswiz like this:

.PP
.RS

.nf
Normal binding:
bindsym Mod4+Shift+Left   focus left

Wizzy binding:
bindsym Mod4+Left   exec --no-startup-id i3viswiz left

.fi
.RE

.PP
example output:

.PP
.RS

.nf
$ i3viswiz --instance

* 94475856575600 ws: 1 x: 0     y: 0     w: 1558  h: 410   | termsmall
- 94475856763248 ws: 1 x: 1558  y: 0     w: 362   h: 272   | gl
- 94475856286352 ws: 1 x: 0     y: 410   w: 1558  h: 643   | sublime_main
- 94475856449344 ws: 1 x: 1558  y: 272   w: 362   h: 781   | thunar-lna

.fi
.RE

.PP
If \fB\fC--class\fR , \fB\fC--instance\fR, \fB\fC--title\fR,
\fB\fC--titleformat\fR, \fB\fC--winid\fR or \fB\fC--parent\fR is used
together with a DIRECTION or no argument. i3viswiz
will print this output, with the type in the last
column of the table (class in the example above).

.PP
If argument is present and not a DIRECTION option
will be a criteria and the argument the search
string.

.PP
Assuming the same scenario as the example above,
the following command:
.br
\fB\fC$ i3viswiz --instance termsmall\fR
.br
will output the container_id (\fB\fC94475856575600\fR).
.br
If now window is matching output will be blank.

.PP
\fBfocus wrapping\fP

.PP
if the setting "focus_wrapping" is set to
"workspace" in the i3config. i3viswiz will wrap
the focus only inside the currenttly focused
workspace instead of the whole work area (other
monitors).

.PP
The setting has to be present in the active
config before the first i3viswiz invokation.

.PP
To force this behavior otherwise, issue the
following command:
.br
\fB\fCi3var set focus_wrap workspace\fR

.PP
Or to disable it:
.br
\fB\fCi3var set focus_wrap normal\fR

.SH DEPENDENCIES
.PP
\fB\fCbash\fR \fB\fCgawk\fR \fB\fCi3\fR

.PP
budRich https://github.com/budlabs/i3ass
\[la]https://github.com/budlabs/i3ass\[ra]

.SH SEE ALSO
.PP
bash(1), awk(1), i3(1),
