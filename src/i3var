#!/usr/bin/env bash

___printversion(){
  
cat << 'EOB' >&2
i3var - version: 0.050
updated: 2021-05-28 by budRich
EOB
}



main(){

  action=$1 variable_name=$2 value_to_set=$3

  [[ $action =~ get|set && ${#@} -gt 1 ]] \
    || ERX "$* not a valid command"

  : "${json:=${__o[json]:-$(i3-msg -t get_tree)}}"

  re='^\{"id":([0-9]+)[^[]+\[([^]]*"'"${variable_name}"'=([^"]*)"[^]]*)?'
  [[ $json =~ $re ]] || ERX "no vars found"

  root_id=${BASH_REMATCH[1]}
  current_value=${BASH_REMATCH[3]}

  if [[ $action = set ]]; then

    new_mark="${variable_name}=$value_to_set"
    old_mark="${variable_name}=$current_value"

    # this will remove the old mark
    [[ $current_value ]] \
      && msg+="[con_id=$root_id] mark --toggle --add $old_mark;"

    [[ $value_to_set ]] \
      && msg+="[con_id=$root_id] mark --add $new_mark"

    i3-msg -q "${msg%;}"

  elif [[ $current_value ]]; then

    echo "$current_value"
  fi
}

___printhelp(){
  
cat << 'EOB' >&2
i3var - Set or get a i3 variable


SYNOPSIS
--------
i3var set VARNAME [VALUE] [--json JSON]
i3var get VARNAME [--json JSON]
i3var --help|-h
i3var --version|-v

OPTIONS
-------

--json JSON  
Use JSON instead of the output of i3-msg -t
get_tree


--help|-h  
Show help and exit.


--version|-v  
Show version and exit.
EOB
}


ERM(){ >&2 echo "$*"; }
ERR(){ >&2 echo "[WARNING]" "$*"; }
ERX(){ >&2 echo "[ERROR]" "$*" && exit 1 ; }


declare -A __o
options="$(
  getopt --name "[ERROR]:i3var" \
    --options "hv" \
    --longoptions "json:,help,version," \
    -- "$@" || exit 98
)"

eval set -- "$options"
unset options

while true; do
  case "$1" in
    --json       ) __o[json]="${2:-}" ; shift ;;
    --help       | -h ) ___printhelp && exit ;;
    --version    | -v ) ___printversion && exit ;;
    -- ) shift ; break ;;
    *  ) break ;;
  esac
  shift
done

[[ ${__lastarg:="${!#:-}"} =~ ^--$|${0}$ ]] \
  && __lastarg="" 


main "${@}"


